'use strict';

var _assertThisInitialized = require('@babel/runtime/helpers/assertThisInitialized');
var _inheritsLoose = require('@babel/runtime/helpers/inheritsLoose');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _regeneratorRuntime = require('@babel/runtime/regenerator');
var _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');
var React = require('react');
var ui = require('@sanity/ui');
var formBuilder = require('part:@sanity/form-builder');
var patchEvent = require('part:@sanity/form-builder/patch-event');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _assertThisInitialized__default = /*#__PURE__*/_interopDefaultLegacy(_assertThisInitialized);
var _inheritsLoose__default = /*#__PURE__*/_interopDefaultLegacy(_inheritsLoose);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);
var _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".BCO0XnobduUthWBzUhP2H {\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.BCO0XnobduUthWBzUhP2H::before {\n  content: \"\";\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  opacity: 0.6;\n  background-color: var(--card-bg-color);\n}\n";
var styles = {"overlay":"BCO0XnobduUthWBzUhP2H"};
styleInject(css_248z);

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn) {
  var module = { exports: {} };
	return fn(module, module.exports), module.exports;
}

/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/

var classnames = createCommonjsModule(function (module) {
/* global define */

(function () {

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if (module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else {
		window.classNames = classNames;
	}
}());
});

var BoxSpinner = function BoxSpinner(_ref) {
  var _classNames;

  var overlay = _ref.overlay;
  return /*#__PURE__*/React__default['default'].createElement(ui.Box, {
    padding: [4, 2],
    className: classnames((_classNames = {}, _classNames[styles.overlay] = !!overlay, _classNames))
  }, /*#__PURE__*/React__default['default'].createElement(ui.Flex, {
    align: "center",
    justify: "center",
    style: {
      height: '100%',
      width: '100%'
    }
  }, /*#__PURE__*/React__default['default'].createElement(ui.Spinner, null)));
};

var Tabs;

(function (Tabs) {
  Tabs["SEO"] = "seo";
  Tabs["READABILITY"] = "readability";
})(Tabs || (Tabs = {}));

var LangCultureMap = {
  af: "af-ZA",
  ar: "ar-SA",
  az: "az-Latn-AZ",
  be: "be-BY",
  bg: "bg-BG",
  ca: "ca-ES",
  cs: "cs-CZ",
  da: "da-DK",
  de: "de-DE",
  dv: "dv-MV",
  el: "el-GR",
  en: "en-US",
  es: "es-ES",
  et: "et-EE",
  eu: "eu-ES",
  fa: "fa-IR",
  fi: "fi-FI",
  fo: "fo-FO",
  fr: "fr-FR",
  gl: "gl-ES",
  gu: "gu-IN",
  he: "he-IL",
  hi: "hi-IN",
  hr: "hr-HR",
  hu: "hu-HU",
  hy: "hy-AM",
  id: "id-ID",
  is: "is-IS",
  it: "it-IT",
  ja: "ja-JP",
  ka: "ka-GE",
  kk: "kk-KZ",
  kn: "kn-IN",
  ko: "ko-KR",
  kok: "kok-IN",
  ky: "ky-KG",
  lt: "lt-LT",
  lv: "lv-LV",
  mk: "mk-MK",
  mn: "mn-MN",
  mr: "mr-IN",
  ms: "ms-MY",
  nl: "nl-NL",
  no: "nb-NO",
  pa: "pa-IN",
  pl: "pl-PL",
  pt: "pt-BR",
  ro: "ro-RO",
  ru: "ru-RU",
  sa: "sa-IN",
  sk: "sk-SK",
  sl: "sl-SI",
  sq: "sq-AL",
  sr: "sr-Latn-CS",
  sv: "sv-SE",
  sw: "sw-KE",
  syr: "syr-SY",
  ta: "ta-IN",
  te: "te-IN",
  th: "th-TH",
  tr: "tr-TR",
  tt: "tt-RU",
  uk: "uk-UA",
  ur: "ur-PK",
  uz: "uz-Latn-UZ",
  vi: "vi-VN"
};

var bind = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

var utils = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
var buildURL = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

var InterceptorManager_1 = InterceptorManager;

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
var transformData = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};

var isCancel = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

var normalizeHeaderName = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
var enhanceError = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
var createError = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
var settle = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};

var cookies = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
var isAbsoluteURL = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
var combineURLs = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
var buildFullPath = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
var parseHeaders = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};

var isURLSameOrigin = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);

var xhr = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = xhr;
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = xhr;
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

var defaults_1 = defaults;

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
var dispatchRequest = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults_1.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
var mergeConfig = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
  ];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys)
    .concat(directMergeKeys);

  var otherKeys = Object
    .keys(config1)
    .concat(Object.keys(config2))
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager_1(),
    response: new InterceptorManager_1()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

var Axios_1 = Axios;

/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

var Cancel_1 = Cancel;

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel_1(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

var CancelToken_1 = CancelToken;

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
var spread = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
var isAxiosError = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios_1(defaultConfig);
  var instance = bind(Axios_1.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios_1.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults_1);

// Expose Axios class to allow class inheritance
axios.Axios = Axios_1;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = Cancel_1;
axios.CancelToken = CancelToken_1;
axios.isCancel = isCancel;

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = spread;

// Expose isAxiosError
axios.isAxiosError = isAxiosError;

var axios_1 = axios;

// Allow use of default import syntax in TypeScript
var _default = axios;
axios_1.default = _default;

var axios$1 = axios_1;

var getRawContent = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator__default['default']( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee(document, options) {
    var _LangCultureMap, _doc$title, _doc;

    var baseUrl, slug, url, doc, remote, content, parser, langCulture, title, description, rawContent;
    return _regeneratorRuntime__default['default'].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            baseUrl = function () {
              var url = typeof options.baseUrl === "string" ? options.baseUrl : options.baseUrl(document);
              return url.replace(/\/+$/, "");
            }();

            slug = options.slug(document);
            url = baseUrl + "/" + slug; // fetch remote document if requested

            doc = null;

            if (!(options.fetchRemote !== false)) {
              _context.next = 14;
              break;
            }

            _context.next = 7;
            return axios$1.get(url);

          case 7:
            remote = _context.sent;
            content = remote.data;
            parser = new DOMParser();
            doc = parser.parseFromString(content, "text/html");
            Array.from(doc.body.querySelectorAll("script")).forEach(function (s) {
              return s.remove();
            });
            _context.next = 16;
            break;

          case 14:
            if (!(!options.content || !options.title || !options.description)) {
              _context.next = 16;
              break;
            }

            throw new Error("When `fetchRemote` is disabled you need to provide all Sanity document based methods to retrieve the content for analysis.");

          case 16:
            // get "normalized" langculture
            langCulture = options.locale ? options.locale(document) : doc && doc.documentElement.lang ? doc.documentElement.lang : "en";
            if (!langCulture.includes("-")) langCulture = (_LangCultureMap = LangCultureMap == null ? void 0 : LangCultureMap[langCulture.toLowerCase()]) != null ? _LangCultureMap : "en-US"; // get content stuff

            title = options.title ? options.title(document) : (_doc$title = (_doc = doc) == null ? void 0 : _doc.title) != null ? _doc$title : "";

            description = function () {
              var _doc2;

              if (options.description) return options.description(document);
              var el = (_doc2 = doc) == null ? void 0 : _doc2.querySelector('meta[name="description"]');
              if (el) return el.content;
              return "";
            }(); // build final raw content


            rawContent = function () {
              if (doc) {
                var contentBySelector = options.contentSelector ? doc.querySelector(options.contentSelector) : doc.body;
                return (contentBySelector || doc.body).innerHTML;
              }

              if (options.content) {
                return options.content(document);
              }

              return "";
            }();

            return _context.abrupt("return", {
              slug: slug,
              url: url,
              title: title,
              description: description,
              langCulture: langCulture,
              rawContent: rawContent
            });

          case 22:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function getRawContent(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked, or until the next browser frame is drawn. The debounced function
 * comes with a `cancel` method to cancel delayed `func` invocations and a
 * `flush` method to immediately invoke them. Provide `options` to indicate
 * whether `func` should be invoked on the leading and/or trailing edge of the
 * `wait` timeout. The `func` is invoked with the last arguments provided to the
 * debounced function. Subsequent calls to the debounced function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`
 * invocation will be deferred until the next frame is drawn (typically about
 * 16ms).
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `debounce` and `throttle`.
 *
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0]
 *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is
 *  used (if available, otherwise it will be setTimeout(...,0)).
 * @param {Object} [options={}] The options object.
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.leading=false]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {number} [options.maxWait]
 *  Specify invoking on the trailing edge of the timeout.
 * @param {boolean} [options.trailing=true]
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * const resizeHandler = useDebouncedCallback(calculateLayout, 150);
 * window.addEventListener('resize', resizeHandler)
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * const clickHandler = useDebouncedCallback(sendMail, 300, {
 *   leading: true,
 *   trailing: false,
 * })
 * <button onClick={clickHandler}>click me</button>
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * const debounced = useDebouncedCallback(batchLog, 250, { 'maxWait': 1000 })
 * const source = new EventSource('/stream')
 * source.addEventListener('message', debounced)
 *
 * // Cancel the trailing debounced invocation.
 * window.addEventListener('popstate', debounced.cancel)
 *
 * // Check for pending invocations.
 * const status = debounced.pending() ? "Pending..." : "Ready"
 */
function useDebouncedCallback(func, wait, options) {
    var _this = this;
    var lastCallTime = React.useRef(null);
    var lastInvokeTime = React.useRef(0);
    var timerId = React.useRef(null);
    var lastArgs = React.useRef([]);
    var lastThis = React.useRef();
    var result = React.useRef();
    var funcRef = React.useRef(func);
    var mounted = React.useRef(true);
    funcRef.current = func;
    // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.
    var useRAF = !wait && wait !== 0 && typeof window !== 'undefined';
    if (typeof func !== 'function') {
        throw new TypeError('Expected a function');
    }
    wait = +wait || 0;
    options = options || {};
    var leading = !!options.leading;
    var trailing = 'trailing' in options ? !!options.trailing : true; // `true` by default
    var maxing = 'maxWait' in options;
    var maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : null;
    React.useEffect(function () {
        mounted.current = true;
        return function () {
            mounted.current = false;
        };
    }, []);
    // You may have a question, why we have so many code under the useMemo definition.
    //
    // This was made as we want to escape from useCallback hell and
    // not to initialize a number of functions each time useDebouncedCallback is called.
    //
    // It means that we have less garbage for our GC calls which improves performance.
    // Also, it makes this library smaller.
    //
    // And the last reason, that the code without lots of useCallback with deps is easier to read.
    // You have only one place for that.
    var debounced = React.useMemo(function () {
        var invokeFunc = function (time) {
            var args = lastArgs.current;
            var thisArg = lastThis.current;
            lastArgs.current = lastThis.current = null;
            lastInvokeTime.current = time;
            return (result.current = funcRef.current.apply(thisArg, args));
        };
        var startTimer = function (pendingFunc, wait) {
            if (useRAF)
                cancelAnimationFrame(timerId.current);
            timerId.current = useRAF ? requestAnimationFrame(pendingFunc) : setTimeout(pendingFunc, wait);
        };
        var shouldInvoke = function (time) {
            if (!mounted.current)
                return false;
            var timeSinceLastCall = time - lastCallTime.current;
            var timeSinceLastInvoke = time - lastInvokeTime.current;
            // Either this is the first call, activity has stopped and we're at the
            // trailing edge, the system time has gone backwards and we're treating
            // it as the trailing edge, or we've hit the `maxWait` limit.
            return (!lastCallTime.current ||
                timeSinceLastCall >= wait ||
                timeSinceLastCall < 0 ||
                (maxing && timeSinceLastInvoke >= maxWait));
        };
        var trailingEdge = function (time) {
            timerId.current = null;
            // Only invoke if we have `lastArgs` which means `func` has been
            // debounced at least once.
            if (trailing && lastArgs.current) {
                return invokeFunc(time);
            }
            lastArgs.current = lastThis.current = null;
            return result.current;
        };
        var timerExpired = function () {
            var time = Date.now();
            if (shouldInvoke(time)) {
                return trailingEdge(time);
            }
            // https://github.com/xnimorz/use-debounce/issues/97
            if (!mounted.current) {
                return;
            }
            // Remaining wait calculation
            var timeSinceLastCall = time - lastCallTime.current;
            var timeSinceLastInvoke = time - lastInvokeTime.current;
            var timeWaiting = wait - timeSinceLastCall;
            var remainingWait = maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
            // Restart the timer
            startTimer(timerExpired, remainingWait);
        };
        var func = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var time = Date.now();
            var isInvoking = shouldInvoke(time);
            lastArgs.current = args;
            lastThis.current = _this;
            lastCallTime.current = time;
            if (isInvoking) {
                if (!timerId.current && mounted.current) {
                    // Reset any `maxWait` timer.
                    lastInvokeTime.current = lastCallTime.current;
                    // Start the timer for the trailing edge.
                    startTimer(timerExpired, wait);
                    // Invoke the leading edge.
                    return leading ? invokeFunc(lastCallTime.current) : result.current;
                }
                if (maxing) {
                    // Handle invocations in a tight loop.
                    startTimer(timerExpired, wait);
                    return invokeFunc(lastCallTime.current);
                }
            }
            if (!timerId.current) {
                startTimer(timerExpired, wait);
            }
            return result.current;
        };
        func.cancel = function () {
            if (timerId.current) {
                useRAF ? cancelAnimationFrame(timerId.current) : clearTimeout(timerId.current);
            }
            lastInvokeTime.current = 0;
            lastArgs.current = lastCallTime.current = lastThis.current = timerId.current = null;
        };
        func.isPending = function () {
            return !!timerId.current;
        };
        func.flush = function () {
            return !timerId.current ? result.current : trailingEdge(Date.now());
        };
        return func;
    }, [leading, maxing, wait, maxWait, trailing, useRAF]);
    return debounced;
}

var InsightResult = function InsightResult(_ref) {
  var valid = _ref.valid,
      warning = _ref.warning,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement(ui.Card, {
    border: true,
    padding: [3],
    tone: !valid ? 'critical' : warning ? 'caution' : undefined
  }, /*#__PURE__*/React__default['default'].createElement(ui.Flex, {
    justify: "flex-start",
    align: "center"
  }, /*#__PURE__*/React__default['default'].createElement(ui.Text, null, typeof children === 'function' ? children(!!valid) : children)));
};

var SEOInputSeoTab = function SEOInputSeoTab(_ref) {
  var hidden = _ref.hidden,
      insights = _ref.insights,
      value = _ref.value;
  var idealKeywordDensity = React__default['default'].useMemo(function () {
    var _insights$wordCountIn;

    return Math.floor(((_insights$wordCountIn = insights == null ? void 0 : insights.wordCountInText) != null ? _insights$wordCountIn : 0) / 180);
  }, [insights]);
  var altTagCountPercentage = React__default['default'].useMemo(function () {
    if (insights != null && insights.altTagCount) {
      var altTagCount = insights.altTagCount;
      return altTagCount.withAltKeyword / (altTagCount.noAlt + altTagCount.withAlt);
    }

    return 0;
  }, [insights]);
  return /*#__PURE__*/React__default['default'].createElement(ui.TabPanel, {
    hidden: hidden,
    id: Tabs.SEO,
    "aria-labelledby": Tabs.SEO
  }, !!insights && /*#__PURE__*/React__default['default'].createElement(ui.Stack, {
    space: 2,
    marginTop: 2
  }, /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: insights.keyphraseLength > 0
  }, "Keyphrase length"), /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: insights.keyphraseLength > 0 && insights.metaDescriptionKeyword > 0
  }, "Keyphrase found in meta description"), /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: insights.keyphraseLength > 0 && insights.keywordInPageTitle && insights.keywordInPageTitle.allWordsFound
  }, function (valid) {
    var _value$focus_keyword;

    return valid ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "Keyphrase found in page title") : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "Not all the words from your keyphrase \"", (_value$focus_keyword = value == null ? void 0 : value.focus_keyword) != null ? _value$focus_keyword : '', "\" appear in the SEO title");
  }), /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: insights.keyphraseLength > 0 && insights.firstParagraph && insights.firstParagraph.foundInParagraph
  }, function (valid) {
    return valid ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "Keyphrase was found in your content introduction") : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "Your keyphrase or its synonyms do not appear in the first paragraph.");
  }), /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: insights.keyphraseLength > 0 && insights.keywordCount && insights.keywordCount.count >= idealKeywordDensity
  }, function (valid) {
    return valid ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "Good keyphrase density in your content") : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "The focus keyphrase was found ", insights.keywordCount ? insights.keywordCount.count : 0, " times. That's less than the recommended minimum of ", idealKeywordDensity, " times for a text of this length.");
  }), /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: insights.getLinkStatistics && insights.getLinkStatistics.internalTotal > 0
  }, "Internal links"), /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: insights.getLinkStatistics && insights.getLinkStatistics.externalTotal > 0
  }, "Outbound links"), insights.altTagCount && insights.altTagCount.noAlt + insights.altTagCount.withAlt > 4 && /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: altTagCountPercentage >= .3 && altTagCountPercentage <= .7
  }, function (valid) {
    return valid ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "Good use of topic in image alt attributes") : altTagCountPercentage <= .3 ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "Too little images on this page have an alt attribute that reflect the topic of your text. (", altTagCountPercentage * 100, "%)") : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "Too many images on this page have alt attribute that reflect the topic of your text. (", altTagCountPercentage * 100, "%)");
  }), insights.pageTitleWidth === 0 && /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: false
  }, "Be sure to include an SEO title on your page"), insights.pageTitleWidth > 600 && /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: false
  }, "Your SEO title should not be longer than 600px for optimal visibility in search engines."), insights.keywordCountInUrl && insights.keywordCountInUrl.percentWordMatches < 100 && /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    warning: true
  }, "(Part of) your keyphrase does not appear in the slug.")));
};

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match Latin Unicode letters (excluding mathematical operators). */
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

/** Used to compose unicode character classes. */
var rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
    rsComboSymbolsRange = '\\u20d0-\\u20f0';

/** Used to compose unicode capture groups. */
var rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';

/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */
var reComboMark = RegExp(rsCombo, 'g');

/** Used to map Latin Unicode letters to basic Latin letters. */
var deburredLetters = {
  // Latin-1 Supplement block.
  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
  '\xc7': 'C',  '\xe7': 'c',
  '\xd0': 'D',  '\xf0': 'd',
  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
  '\xd1': 'N',  '\xf1': 'n',
  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
  '\xc6': 'Ae', '\xe6': 'ae',
  '\xde': 'Th', '\xfe': 'th',
  '\xdf': 'ss',
  // Latin Extended-A block.
  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
  '\u0134': 'J',  '\u0135': 'j',
  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
  '\u0174': 'W',  '\u0175': 'w',
  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
  '\u0132': 'IJ', '\u0133': 'ij',
  '\u0152': 'Oe', '\u0153': 'oe',
  '\u0149': "'n", '\u017f': 'ss'
};

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function(key) {
    return object == null ? undefined : object[key];
  };
}

/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */
var deburrLetter = basePropertyOf(deburredLetters);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Built-in value references. */
var Symbol = root.Symbol;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString$1(value) {
  return value == null ? '' : baseToString(value);
}

/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */
function deburr(string) {
  string = toString$1(string);
  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
}

var lodash_deburr = deburr;

var widthsMap_1 = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
/* eslint quotes: off, comma-dangle: off, quote-props: off */
var widthsMap = {
  "andale mono": {
    "0": [60, 60, 60, 60],
    "1": [60, 60, 60, 60],
    "2": [60, 60, 60, 60],
    "3": [60, 60, 60, 60],
    "4": [60, 60, 60, 60],
    "5": [60, 60, 60, 60],
    "6": [60, 60, 60, 60],
    "7": [60, 60, 60, 60],
    "8": [60, 60, 60, 60],
    "9": [60, 60, 60, 60],
    " ": [60, 60, 60, 60],
    "!": [60, 60, 60, 60],
    "\"": [60, 60, 60, 60],
    "#": [60, 60, 60, 60],
    "$": [60, 60, 60, 60],
    "%": [60, 60, 60, 60],
    "&": [60, 60, 60, 60],
    "'": [60, 60, 60, 60],
    "(": [60, 60, 60, 60],
    ")": [60, 60, 60, 60],
    "*": [60, 60, 60, 60],
    "+": [60, 60, 60, 60],
    ",": [60, 60, 60, 60],
    "-": [60, 60, 60, 60],
    ".": [60, 60, 60, 60],
    "/": [60, 60, 60, 60],
    ":": [60, 60, 60, 60],
    ";": [60, 60, 60, 60],
    "<": [60, 60, 60, 60],
    "=": [60, 60, 60, 60],
    ">": [60, 60, 60, 60],
    "?": [60, 60, 60, 60],
    "@": [60, 60, 60, 60],
    "A": [60, 60, 60, 60],
    "B": [60, 60, 60, 60],
    "C": [60, 60, 60, 60],
    "D": [60, 60, 60, 60],
    "E": [60, 60, 60, 60],
    "F": [60, 60, 60, 60],
    "G": [60, 60, 60, 60],
    "H": [60, 60, 60, 60],
    "I": [60, 60, 60, 60],
    "J": [60, 60, 60, 60],
    "K": [60, 60, 60, 60],
    "L": [60, 60, 60, 60],
    "M": [60, 60, 60, 60],
    "N": [60, 60, 60, 60],
    "O": [60, 60, 60, 60],
    "P": [60, 60, 60, 60],
    "Q": [60, 60, 60, 60],
    "R": [60, 60, 60, 60],
    "S": [60, 60, 60, 60],
    "T": [60, 60, 60, 60],
    "U": [60, 60, 60, 60],
    "V": [60, 60, 60, 60],
    "W": [60, 60, 60, 60],
    "X": [60, 60, 60, 60],
    "Y": [60, 60, 60, 60],
    "Z": [60, 60, 60, 60],
    "[": [60, 60, 60, 60],
    "\\": [60, 60, 60, 60],
    "]": [60, 60, 60, 60],
    "^": [60, 60, 60, 60],
    "_": [60, 60, 60, 60],
    "`": [60, 60, 60, 60],
    "a": [60, 60, 60, 60],
    "b": [60, 60, 60, 60],
    "c": [60, 60, 60, 60],
    "d": [60, 60, 60, 60],
    "e": [60, 60, 60, 60],
    "f": [60, 60, 60, 60],
    "g": [60, 60, 60, 60],
    "h": [60, 60, 60, 60],
    "i": [60, 60, 60, 60],
    "j": [60, 60, 60, 60],
    "k": [60, 60, 60, 60],
    "l": [60, 60, 60, 60],
    "m": [60, 60, 60, 60],
    "n": [60, 60, 60, 60],
    "o": [60, 60, 60, 60],
    "p": [60, 60, 60, 60],
    "q": [60, 60, 60, 60],
    "r": [60, 60, 60, 60],
    "s": [60, 60, 60, 60],
    "t": [60, 60, 60, 60],
    "u": [60, 60, 60, 60],
    "v": [60, 60, 60, 60],
    "w": [60, 60, 60, 60],
    "x": [60, 60, 60, 60],
    "y": [60, 60, 60, 60],
    "z": [60, 60, 60, 60],
    "{": [60, 60, 60, 60],
    "|": [60, 60, 60, 60],
    "}": [60, 60, 60, 60],
    "~": [60, 60, 60, 60]
  },
  "arial": {
    "0": [56, 56, 56, 56],
    "1": [56, 56, 56, 56],
    "2": [56, 56, 56, 56],
    "3": [56, 56, 56, 56],
    "4": [56, 56, 56, 56],
    "5": [56, 56, 56, 56],
    "6": [56, 56, 56, 56],
    "7": [56, 56, 56, 56],
    "8": [56, 56, 56, 56],
    "9": [56, 56, 56, 56],
    " ": [28, 28, 28, 28],
    "!": [28, 33, 28, 33],
    "\"": [35, 47, 35, 47],
    "#": [56, 56, 56, 56],
    "$": [56, 56, 56, 56],
    "%": [89, 89, 89, 89],
    "&": [67, 72, 67, 72],
    "'": [19, 24, 19, 24],
    "(": [33, 33, 33, 33],
    ")": [33, 33, 33, 33],
    "*": [39, 39, 39, 39],
    "+": [58, 58, 58, 58],
    ",": [28, 28, 28, 28],
    "-": [33, 33, 33, 33],
    ".": [28, 28, 28, 28],
    "/": [28, 28, 28, 28],
    ":": [28, 33, 28, 33],
    ";": [28, 33, 28, 33],
    "<": [58, 58, 58, 58],
    "=": [58, 58, 58, 58],
    ">": [58, 58, 58, 58],
    "?": [56, 61, 56, 61],
    "@": [102, 98, 102, 98],
    "A": [67, 72, 67, 72],
    "B": [67, 72, 67, 72],
    "C": [72, 72, 72, 72],
    "D": [72, 72, 72, 72],
    "E": [67, 67, 67, 67],
    "F": [61, 61, 61, 61],
    "G": [78, 78, 78, 78],
    "H": [72, 72, 72, 72],
    "I": [28, 28, 28, 28],
    "J": [50, 56, 50, 56],
    "K": [67, 72, 67, 72],
    "L": [56, 61, 56, 61],
    "M": [83, 83, 83, 83],
    "N": [72, 72, 72, 72],
    "O": [78, 78, 78, 78],
    "P": [67, 67, 67, 67],
    "Q": [78, 78, 78, 78],
    "R": [72, 72, 72, 72],
    "S": [67, 67, 67, 67],
    "T": [61, 61, 61, 61],
    "U": [72, 72, 72, 72],
    "V": [67, 67, 67, 67],
    "W": [94, 94, 94, 94],
    "X": [67, 67, 67, 67],
    "Y": [67, 67, 67, 67],
    "Z": [61, 61, 61, 61],
    "[": [28, 33, 28, 33],
    "\\": [28, 28, 28, 28],
    "]": [28, 33, 28, 33],
    "^": [47, 58, 47, 58],
    "_": [56, 56, 56, 56],
    "`": [33, 33, 33, 33],
    "a": [56, 56, 56, 56],
    "b": [56, 61, 56, 61],
    "c": [50, 56, 50, 56],
    "d": [56, 61, 56, 61],
    "e": [56, 56, 56, 56],
    "f": [28, 33, 28, 33],
    "g": [56, 61, 56, 61],
    "h": [56, 61, 56, 61],
    "i": [22, 28, 22, 28],
    "j": [22, 28, 22, 28],
    "k": [50, 56, 50, 56],
    "l": [22, 28, 22, 28],
    "m": [83, 89, 83, 89],
    "n": [56, 61, 56, 61],
    "o": [56, 61, 56, 61],
    "p": [56, 61, 56, 61],
    "q": [56, 61, 56, 61],
    "r": [33, 39, 33, 39],
    "s": [50, 56, 50, 56],
    "t": [28, 33, 28, 33],
    "u": [56, 61, 56, 61],
    "v": [50, 56, 50, 56],
    "w": [72, 78, 72, 78],
    "x": [50, 56, 50, 56],
    "y": [50, 56, 50, 56],
    "z": [50, 50, 50, 50],
    "{": [33, 39, 33, 39],
    "|": [26, 28, 26, 28],
    "}": [33, 39, 33, 39],
    "~": [58, 58, 58, 58]
  },
  "avenir": {
    "0": [56, 59, 56, 59],
    "1": [56, 59, 56, 59],
    "2": [56, 59, 56, 59],
    "3": [56, 59, 56, 59],
    "4": [56, 59, 56, 59],
    "5": [56, 59, 56, 59],
    "6": [56, 59, 56, 59],
    "7": [56, 59, 56, 59],
    "8": [56, 59, 56, 59],
    "9": [56, 59, 56, 59],
    " ": [28, 30, 28, 30],
    "!": [28, 30, 28, 30],
    "\"": [52, 52, 52, 52],
    "#": [56, 59, 56, 59],
    "$": [56, 59, 56, 59],
    "%": [83, 91, 83, 91],
    "&": [70, 74, 70, 74],
    "'": [26, 30, 26, 30],
    "(": [26, 30, 26, 30],
    ")": [26, 30, 26, 30],
    "*": [44, 46, 44, 46],
    "+": [67, 67, 67, 67],
    ",": [28, 30, 28, 30],
    "-": [33, 32, 33, 32],
    ".": [28, 30, 28, 30],
    "/": [37, 39, 37, 39],
    ":": [28, 30, 28, 30],
    ";": [28, 30, 28, 30],
    "<": [67, 67, 67, 67],
    "=": [67, 67, 67, 67],
    ">": [67, 67, 67, 67],
    "?": [48, 52, 48, 52],
    "@": [80, 80, 80, 80],
    "A": [69, 72, 69, 72],
    "B": [63, 65, 63, 65],
    "C": [70, 69, 70, 69],
    "D": [74, 76, 74, 76],
    "E": [59, 61, 59, 61],
    "F": [56, 57, 56, 57],
    "G": [78, 78, 78, 78],
    "H": [72, 74, 72, 74],
    "I": [26, 28, 26, 28],
    "J": [48, 50, 48, 50],
    "K": [63, 69, 63, 69],
    "L": [50, 52, 50, 52],
    "M": [89, 93, 89, 93],
    "N": [78, 80, 78, 80],
    "O": [83, 83, 83, 83],
    "P": [57, 61, 57, 61],
    "Q": [83, 85, 83, 85],
    "R": [59, 63, 59, 63],
    "S": [56, 57, 56, 57],
    "T": [57, 57, 57, 57],
    "U": [69, 72, 69, 72],
    "V": [61, 67, 61, 67],
    "W": [94, 98, 94, 98],
    "X": [63, 69, 63, 69],
    "Y": [57, 63, 57, 63],
    "Z": [56, 61, 56, 61],
    "[": [26, 28, 26, 28],
    "\\": [37, 39, 37, 39],
    "]": [26, 28, 26, 28],
    "^": [67, 67, 67, 67],
    "_": [50, 50, 50, 50],
    "`": [24, 26, 24, 26],
    "a": [52, 54, 52, 54],
    "b": [61, 63, 61, 63],
    "c": [48, 48, 48, 48],
    "d": [61, 63, 61, 63],
    "e": [56, 57, 56, 57],
    "f": [30, 35, 30, 35],
    "g": [61, 63, 61, 63],
    "h": [56, 57, 56, 57],
    "i": [24, 26, 24, 26],
    "j": [24, 26, 24, 26],
    "k": [48, 54, 48, 54],
    "l": [24, 26, 24, 26],
    "m": [85, 87, 85, 87],
    "n": [56, 57, 56, 57],
    "o": [59, 61, 59, 61],
    "p": [61, 63, 61, 63],
    "q": [61, 63, 61, 63],
    "r": [33, 39, 33, 39],
    "s": [43, 44, 43, 44],
    "t": [33, 39, 33, 39],
    "u": [56, 57, 56, 57],
    "v": [48, 52, 48, 52],
    "w": [72, 80, 72, 80],
    "x": [48, 54, 48, 54],
    "y": [48, 52, 48, 52],
    "z": [43, 48, 43, 48],
    "{": [26, 28, 26, 28],
    "|": [22, 22, 22, 22],
    "}": [26, 28, 26, 28],
    "~": [67, 67, 67, 67]
  },
  "avenir next": {
    "0": [58, 65, 58, 64],
    "1": [58, 65, 58, 64],
    "2": [58, 65, 58, 64],
    "3": [58, 65, 58, 64],
    "4": [58, 65, 58, 64],
    "5": [58, 65, 58, 64],
    "6": [58, 65, 58, 64],
    "7": [58, 65, 58, 64],
    "8": [58, 65, 58, 64],
    "9": [58, 65, 58, 64],
    " ": [25, 25, 25, 25],
    "!": [33, 36, 28, 35],
    "\"": [41, 50, 40, 49],
    "#": [56, 60, 56, 60],
    "$": [58, 65, 58, 64],
    "%": [83, 91, 83, 91],
    "&": [70, 78, 70, 78],
    "'": [26, 30, 26, 30],
    "(": [30, 34, 30, 34],
    ")": [30, 34, 30, 34],
    "*": [44, 49, 44, 49],
    "+": [67, 67, 67, 67],
    ",": [26, 30, 26, 30],
    "-": [32, 33, 32, 33],
    ".": [26, 30, 26, 30],
    "/": [37, 42, 37, 41],
    ":": [30, 33, 30, 33],
    ";": [30, 33, 30, 33],
    "<": [67, 67, 67, 67],
    "=": [67, 67, 67, 67],
    ">": [67, 67, 67, 67],
    "?": [48, 55, 48, 54],
    "@": [80, 80, 80, 80],
    "A": [70, 73, 70, 71],
    "B": [64, 67, 62, 66],
    "C": [72, 70, 72, 68],
    "D": [76, 77, 76, 77],
    "E": [59, 61, 58, 59],
    "F": [56, 58, 55, 56],
    "G": [78, 77, 77, 75],
    "H": [72, 76, 71, 76],
    "I": [26, 32, 26, 32],
    "J": [49, 53, 48, 53],
    "K": [63, 71, 59, 68],
    "L": [51, 53, 51, 53],
    "M": [89, 96, 89, 95],
    "N": [76, 79, 75, 79],
    "O": [85, 85, 83, 83],
    "P": [58, 64, 58, 64],
    "Q": [84, 86, 84, 84],
    "R": [60, 66, 60, 66],
    "S": [56, 59, 56, 59],
    "T": [57, 58, 55, 55],
    "U": [71, 74, 71, 74],
    "V": [62, 68, 60, 67],
    "W": [97, 103, 96, 101],
    "X": [65, 70, 62, 69],
    "Y": [60, 67, 56, 61],
    "Z": [57, 64, 57, 62],
    "[": [30, 34, 30, 34],
    "\\": [37, 42, 37, 42],
    "]": [30, 34, 30, 34],
    "^": [67, 69, 67, 69],
    "_": [50, 50, 50, 50],
    "`": [24, 30, 24, 30],
    "a": [53, 57, 53, 56],
    "b": [64, 66, 63, 66],
    "c": [50, 50, 50, 50],
    "d": [64, 66, 62, 66],
    "e": [57, 60, 57, 59],
    "f": [30, 36, 30, 36],
    "g": [63, 66, 63, 66],
    "h": [58, 62, 58, 62],
    "i": [25, 30, 25, 29],
    "j": [25, 30, 25, 30],
    "k": [51, 60, 49, 57],
    "l": [25, 30, 25, 30],
    "m": [88, 92, 87, 93],
    "n": [58, 62, 58, 62],
    "o": [61, 63, 60, 63],
    "p": [64, 66, 63, 66],
    "q": [64, 66, 62, 66],
    "r": [36, 40, 35, 38],
    "s": [44, 47, 44, 46],
    "t": [32, 37, 31, 36],
    "u": [58, 61, 58, 61],
    "v": [49, 57, 48, 55],
    "w": [75, 87, 73, 86],
    "x": [48, 59, 48, 56],
    "y": [49, 57, 48, 56],
    "z": [44, 51, 44, 51],
    "{": [30, 34, 30, 34],
    "|": [22, 24, 22, 24],
    "}": [30, 34, 30, 34],
    "~": [67, 67, 67, 67]
  },
  "comic sans ms": {
    "0": [61, 61, 61, 61],
    "1": [45, 61, 45, 61],
    "2": [61, 61, 61, 61],
    "3": [61, 61, 61, 61],
    "4": [61, 61, 61, 61],
    "5": [61, 61, 61, 61],
    "6": [61, 61, 61, 61],
    "7": [61, 61, 61, 61],
    "8": [61, 61, 61, 61],
    "9": [61, 61, 61, 61],
    " ": [30, 48, 30, 48],
    "!": [24, 24, 24, 24],
    "\"": [42, 44, 42, 44],
    "#": [84, 84, 84, 84],
    "$": [69, 69, 69, 69],
    "%": [82, 82, 82, 82],
    "&": [65, 65, 65, 65],
    "'": [39, 43, 39, 43],
    "(": [37, 37, 37, 37],
    ")": [37, 37, 37, 37],
    "*": [53, 53, 53, 53],
    "+": [48, 61, 48, 61],
    ",": [28, 43, 28, 43],
    "-": [42, 61, 42, 61],
    ".": [25, 43, 25, 43],
    "/": [51, 51, 51, 51],
    ":": [30, 43, 30, 43],
    ";": [30, 43, 30, 43],
    "<": [38, 61, 38, 61],
    "=": [51, 61, 51, 61],
    ">": [38, 61, 38, 61],
    "?": [52, 57, 52, 57],
    "@": [93, 93, 93, 93],
    "A": [73, 73, 73, 73],
    "B": [63, 63, 63, 63],
    "C": [60, 62, 60, 62],
    "D": [72, 72, 72, 72],
    "E": [62, 62, 62, 62],
    "F": [61, 61, 61, 61],
    "G": [68, 68, 68, 68],
    "H": [77, 77, 77, 77],
    "I": [55, 55, 55, 55],
    "J": [67, 67, 67, 67],
    "K": [61, 61, 61, 61],
    "L": [55, 55, 55, 55],
    "M": [88, 88, 88, 88],
    "N": [80, 81, 80, 81],
    "O": [80, 80, 80, 80],
    "P": [52, 53, 52, 53],
    "Q": [88, 88, 88, 88],
    "R": [63, 64, 63, 64],
    "S": [69, 69, 69, 69],
    "T": [68, 70, 68, 70],
    "U": [74, 74, 74, 74],
    "V": [65, 67, 65, 67],
    "W": [104, 104, 104, 104],
    "X": [72, 72, 72, 72],
    "Y": [64, 64, 64, 64],
    "Z": [69, 69, 69, 69],
    "[": [38, 38, 38, 38],
    "\\": [55, 55, 55, 55],
    "]": [38, 38, 38, 38],
    "^": [58, 61, 58, 61],
    "_": [63, 63, 63, 63],
    "`": [56, 56, 56, 56],
    "a": [51, 56, 51, 56],
    "b": [59, 59, 59, 59],
    "c": [51, 51, 51, 51],
    "d": [59, 59, 59, 59],
    "e": [55, 56, 55, 56],
    "f": [51, 51, 51, 51],
    "g": [53, 53, 53, 53],
    "h": [58, 58, 58, 58],
    "i": [28, 28, 28, 28],
    "j": [40, 40, 40, 40],
    "k": [54, 54, 54, 54],
    "l": [27, 27, 27, 27],
    "m": [78, 78, 78, 78],
    "n": [52, 52, 52, 52],
    "o": [53, 53, 53, 53],
    "p": [53, 53, 53, 53],
    "q": [52, 52, 52, 52],
    "r": [48, 48, 48, 48],
    "s": [49, 49, 49, 49],
    "t": [47, 47, 47, 47],
    "u": [52, 52, 52, 52],
    "v": [49, 49, 49, 49],
    "w": [68, 68, 68, 68],
    "x": [59, 59, 59, 59],
    "y": [52, 55, 52, 55],
    "z": [54, 54, 54, 54],
    "{": [37, 37, 37, 37],
    "|": [42, 42, 42, 42],
    "}": [37, 37, 37, 37],
    "~": [60, 61, 60, 61]
  },
  "courier new": {
    "0": [60, 60, 60, 60],
    "1": [60, 60, 60, 60],
    "2": [60, 60, 60, 60],
    "3": [60, 60, 60, 60],
    "4": [60, 60, 60, 60],
    "5": [60, 60, 60, 60],
    "6": [60, 60, 60, 60],
    "7": [60, 60, 60, 60],
    "8": [60, 60, 60, 60],
    "9": [60, 60, 60, 60],
    " ": [60, 60, 60, 60],
    "!": [60, 60, 60, 60],
    "\"": [60, 60, 60, 60],
    "#": [60, 60, 60, 60],
    "$": [60, 60, 60, 60],
    "%": [60, 60, 60, 60],
    "&": [60, 60, 60, 60],
    "'": [60, 60, 60, 60],
    "(": [60, 60, 60, 60],
    ")": [60, 60, 60, 60],
    "*": [60, 60, 60, 60],
    "+": [60, 60, 60, 60],
    ",": [60, 60, 60, 60],
    "-": [60, 60, 60, 60],
    ".": [60, 60, 60, 60],
    "/": [60, 60, 60, 60],
    ":": [60, 60, 60, 60],
    ";": [60, 60, 60, 60],
    "<": [60, 60, 60, 60],
    "=": [60, 60, 60, 60],
    ">": [60, 60, 60, 60],
    "?": [60, 60, 60, 60],
    "@": [60, 60, 60, 60],
    "A": [60, 60, 60, 60],
    "B": [60, 60, 60, 60],
    "C": [60, 60, 60, 60],
    "D": [60, 60, 60, 60],
    "E": [60, 60, 60, 60],
    "F": [60, 60, 60, 60],
    "G": [60, 60, 60, 60],
    "H": [60, 60, 60, 60],
    "I": [60, 60, 60, 60],
    "J": [60, 60, 60, 60],
    "K": [60, 60, 60, 60],
    "L": [60, 60, 60, 60],
    "M": [60, 60, 60, 60],
    "N": [60, 60, 60, 60],
    "O": [60, 60, 60, 60],
    "P": [60, 60, 60, 60],
    "Q": [60, 60, 60, 60],
    "R": [60, 60, 60, 60],
    "S": [60, 60, 60, 60],
    "T": [60, 60, 60, 60],
    "U": [60, 60, 60, 60],
    "V": [60, 60, 60, 60],
    "W": [60, 60, 60, 60],
    "X": [60, 60, 60, 60],
    "Y": [60, 60, 60, 60],
    "Z": [60, 60, 60, 60],
    "[": [60, 60, 60, 60],
    "\\": [60, 60, 60, 60],
    "]": [60, 60, 60, 60],
    "^": [60, 60, 60, 60],
    "_": [60, 60, 60, 60],
    "`": [60, 60, 60, 60],
    "a": [60, 60, 60, 60],
    "b": [60, 60, 60, 60],
    "c": [60, 60, 60, 60],
    "d": [60, 60, 60, 60],
    "e": [60, 60, 60, 60],
    "f": [60, 60, 60, 60],
    "g": [60, 60, 60, 60],
    "h": [60, 60, 60, 60],
    "i": [60, 60, 60, 60],
    "j": [60, 60, 60, 60],
    "k": [60, 60, 60, 60],
    "l": [60, 60, 60, 60],
    "m": [60, 60, 60, 60],
    "n": [60, 60, 60, 60],
    "o": [60, 60, 60, 60],
    "p": [60, 60, 60, 60],
    "q": [60, 60, 60, 60],
    "r": [60, 60, 60, 60],
    "s": [60, 60, 60, 60],
    "t": [60, 60, 60, 60],
    "u": [60, 60, 60, 60],
    "v": [60, 60, 60, 60],
    "w": [60, 60, 60, 60],
    "x": [60, 60, 60, 60],
    "y": [60, 60, 60, 60],
    "z": [60, 60, 60, 60],
    "{": [60, 60, 60, 60],
    "|": [60, 60, 60, 60],
    "}": [60, 60, 60, 60],
    "~": [60, 60, 60, 60]
  },
  "georgia": {
    "0": [61, 70, 61, 70],
    "1": [43, 49, 43, 49],
    "2": [56, 63, 56, 63],
    "3": [55, 62, 55, 62],
    "4": [56, 65, 56, 65],
    "5": [53, 60, 53, 60],
    "6": [57, 65, 57, 65],
    "7": [50, 55, 50, 57],
    "8": [60, 68, 60, 68],
    "9": [57, 65, 57, 65],
    " ": [24, 25, 24, 25],
    "!": [33, 38, 33, 38],
    "\"": [41, 51, 41, 51],
    "#": [64, 70, 64, 70],
    "$": [61, 64, 61, 64],
    "%": [82, 88, 82, 88],
    "&": [71, 80, 71, 80],
    "'": [22, 27, 22, 27],
    "(": [38, 45, 38, 45],
    ")": [38, 45, 38, 45],
    "*": [47, 48, 47, 48],
    "+": [64, 70, 64, 70],
    ",": [27, 33, 27, 33],
    "-": [37, 38, 37, 38],
    ".": [27, 33, 27, 33],
    "/": [47, 47, 47, 47],
    ":": [31, 37, 38, 37],
    ";": [31, 37, 38, 37],
    "<": [64, 70, 64, 70],
    "=": [64, 70, 64, 70],
    ">": [64, 70, 64, 70],
    "?": [48, 55, 48, 55],
    "@": [93, 97, 93, 97],
    "A": [67, 76, 67, 76],
    "B": [65, 76, 65, 76],
    "C": [64, 72, 64, 72],
    "D": [75, 83, 75, 83],
    "E": [65, 72, 65, 72],
    "F": [60, 67, 60, 67],
    "G": [73, 81, 73, 81],
    "H": [81, 91, 81, 91],
    "I": [39, 45, 39, 45],
    "J": [52, 60, 52, 60],
    "K": [69, 82, 69, 82],
    "L": [60, 69, 60, 69],
    "M": [93, 102, 93, 103],
    "N": [77, 84, 77, 83],
    "O": [74, 82, 73, 82],
    "P": [61, 70, 61, 71],
    "Q": [74, 82, 73, 82],
    "R": [70, 80, 70, 80],
    "S": [56, 65, 56, 65],
    "T": [62, 68, 62, 68],
    "U": [76, 83, 76, 83],
    "V": [67, 76, 67, 76],
    "W": [98, 113, 98, 113],
    "X": [71, 81, 71, 80],
    "Y": [62, 73, 62, 73],
    "Z": [60, 69, 60, 69],
    "[": [38, 45, 38, 45],
    "\\": [47, 47, 47, 47],
    "]": [38, 45, 38, 45],
    "^": [64, 70, 64, 70],
    "_": [64, 70, 64, 70],
    "`": [50, 50, 50, 50],
    "a": [50, 60, 57, 66],
    "b": [56, 65, 55, 65],
    "c": [45, 53, 45, 54],
    "d": [57, 66, 58, 66],
    "e": [48, 57, 47, 56],
    "f": [33, 39, 33, 38],
    "g": [51, 58, 57, 65],
    "h": [58, 68, 56, 68],
    "i": [29, 35, 30, 37],
    "j": [29, 35, 29, 36],
    "k": [54, 63, 53, 64],
    "l": [29, 34, 29, 35],
    "m": [88, 102, 88, 100],
    "n": [59, 69, 59, 69],
    "o": [54, 64, 54, 64],
    "p": [57, 66, 58, 66],
    "q": [56, 65, 56, 65],
    "r": [41, 52, 46, 53],
    "s": [43, 51, 43, 52],
    "t": [35, 40, 35, 42],
    "u": [58, 68, 58, 69],
    "v": [50, 57, 54, 61],
    "w": [74, 86, 82, 93],
    "x": [50, 59, 50, 58],
    "y": [49, 56, 56, 67],
    "z": [44, 53, 44, 52],
    "{": [43, 50, 43, 50],
    "|": [38, 39, 38, 39],
    "}": [43, 50, 43, 50],
    "~": [64, 70, 64, 70]
  },
  "helvetica": {
    "0": [56, 56, 56, 56],
    "1": [56, 56, 56, 56],
    "2": [56, 56, 56, 56],
    "3": [56, 56, 56, 56],
    "4": [56, 56, 56, 56],
    "5": [56, 56, 56, 56],
    "6": [56, 56, 56, 56],
    "7": [56, 56, 56, 56],
    "8": [56, 56, 56, 56],
    "9": [56, 56, 56, 56],
    " ": [28, 28, 28, 28],
    "!": [28, 33, 28, 33],
    "\"": [35, 47, 35, 47],
    "#": [56, 56, 56, 56],
    "$": [56, 56, 56, 56],
    "%": [89, 89, 89, 89],
    "&": [67, 72, 67, 72],
    "'": [19, 24, 19, 24],
    "(": [33, 33, 33, 33],
    ")": [33, 33, 33, 33],
    "*": [39, 39, 39, 39],
    "+": [58, 58, 58, 58],
    ",": [28, 28, 28, 28],
    "-": [33, 33, 33, 33],
    ".": [28, 28, 28, 28],
    "/": [28, 28, 28, 28],
    ":": [28, 33, 28, 33],
    ";": [28, 33, 28, 33],
    "<": [58, 58, 58, 58],
    "=": [58, 58, 58, 58],
    ">": [58, 58, 58, 58],
    "?": [56, 61, 56, 61],
    "@": [102, 98, 102, 98],
    "A": [67, 72, 67, 72],
    "B": [67, 72, 67, 72],
    "C": [72, 72, 72, 72],
    "D": [72, 72, 72, 72],
    "E": [67, 67, 67, 67],
    "F": [61, 61, 61, 61],
    "G": [78, 78, 78, 78],
    "H": [72, 72, 72, 72],
    "I": [28, 28, 28, 28],
    "J": [50, 56, 50, 56],
    "K": [67, 72, 67, 72],
    "L": [56, 61, 56, 61],
    "M": [83, 83, 83, 83],
    "N": [72, 72, 72, 72],
    "O": [78, 78, 78, 78],
    "P": [67, 67, 67, 67],
    "Q": [78, 78, 78, 78],
    "R": [72, 72, 72, 72],
    "S": [67, 67, 67, 67],
    "T": [61, 61, 61, 61],
    "U": [72, 72, 72, 72],
    "V": [67, 67, 67, 67],
    "W": [94, 94, 94, 94],
    "X": [67, 67, 67, 67],
    "Y": [67, 67, 67, 67],
    "Z": [61, 61, 61, 61],
    "[": [28, 33, 28, 33],
    "\\": [28, 28, 28, 28],
    "]": [28, 33, 28, 33],
    "^": [47, 58, 47, 58],
    "_": [56, 56, 56, 56],
    "`": [33, 33, 33, 33],
    "a": [56, 56, 56, 56],
    "b": [56, 61, 56, 61],
    "c": [50, 56, 50, 56],
    "d": [56, 61, 56, 61],
    "e": [56, 56, 56, 56],
    "f": [28, 33, 28, 33],
    "g": [56, 61, 56, 61],
    "h": [56, 61, 56, 61],
    "i": [22, 28, 22, 28],
    "j": [22, 28, 22, 28],
    "k": [50, 56, 50, 56],
    "l": [22, 28, 22, 28],
    "m": [83, 89, 83, 89],
    "n": [56, 61, 56, 61],
    "o": [56, 61, 56, 61],
    "p": [56, 61, 56, 61],
    "q": [56, 61, 56, 61],
    "r": [33, 39, 33, 39],
    "s": [50, 56, 50, 56],
    "t": [28, 33, 28, 33],
    "u": [56, 61, 56, 61],
    "v": [50, 56, 50, 56],
    "w": [72, 78, 72, 78],
    "x": [50, 56, 50, 56],
    "y": [50, 56, 50, 56],
    "z": [50, 50, 50, 50],
    "{": [33, 39, 33, 39],
    "|": [26, 28, 26, 28],
    "}": [33, 39, 33, 39],
    "~": [58, 58, 58, 58]
  },
  "impact": {
    "0": [54, 54, 54, 54],
    "1": [38, 38, 38, 38],
    "2": [50, 50, 50, 50],
    "3": [53, 53, 53, 53],
    "4": [50, 50, 50, 50],
    "5": [54, 54, 54, 54],
    "6": [54, 54, 54, 54],
    "7": [39, 39, 39, 39],
    "8": [53, 53, 53, 53],
    "9": [54, 54, 54, 54],
    " ": [18, 18, 18, 18],
    "!": [27, 27, 27, 27],
    "\"": [37, 37, 37, 37],
    "#": [63, 63, 63, 63],
    "$": [55, 55, 55, 55],
    "%": [69, 69, 69, 69],
    "&": [58, 58, 58, 58],
    "'": [19, 19, 19, 19],
    "(": [31, 31, 31, 31],
    ")": [31, 31, 31, 31],
    "*": [28, 28, 28, 28],
    "+": [53, 53, 53, 53],
    ",": [17, 17, 17, 17],
    "-": [29, 29, 29, 29],
    ".": [18, 18, 18, 18],
    "/": [40, 40, 40, 40],
    ":": [20, 20, 20, 20],
    ";": [20, 20, 20, 20],
    "<": [53, 53, 53, 53],
    "=": [53, 53, 53, 53],
    ">": [53, 53, 53, 53],
    "?": [52, 52, 52, 52],
    "@": [77, 77, 77, 77],
    "A": [51, 51, 51, 51],
    "B": [55, 55, 55, 55],
    "C": [55, 55, 55, 55],
    "D": [55, 55, 55, 55],
    "E": [42, 42, 42, 42],
    "F": [40, 40, 40, 40],
    "G": [55, 55, 55, 55],
    "H": [56, 56, 56, 56],
    "I": [29, 29, 29, 29],
    "J": [33, 33, 33, 33],
    "K": [54, 54, 54, 54],
    "L": [38, 38, 38, 38],
    "M": [72, 72, 72, 72],
    "N": [54, 54, 54, 54],
    "O": [55, 55, 55, 55],
    "P": [50, 50, 50, 50],
    "Q": [55, 55, 55, 55],
    "R": [54, 54, 54, 54],
    "S": [52, 52, 52, 52],
    "T": [46, 46, 46, 46],
    "U": [55, 55, 55, 55],
    "V": [52, 52, 52, 52],
    "W": [81, 81, 81, 81],
    "X": [48, 48, 48, 48],
    "Y": [47, 47, 47, 47],
    "Z": [40, 40, 40, 40],
    "[": [28, 28, 28, 28],
    "\\": [40, 40, 40, 40],
    "]": [28, 28, 28, 28],
    "^": [48, 48, 48, 48],
    "_": [55, 55, 55, 55],
    "`": [33, 33, 33, 33],
    "a": [50, 50, 50, 50],
    "b": [52, 52, 52, 52],
    "c": [49, 49, 49, 49],
    "d": [52, 52, 52, 52],
    "e": [51, 51, 51, 51],
    "f": [29, 29, 29, 29],
    "g": [52, 52, 52, 52],
    "h": [52, 52, 52, 52],
    "i": [27, 27, 27, 27],
    "j": [28, 28, 28, 28],
    "k": [48, 48, 48, 48],
    "l": [27, 27, 27, 27],
    "m": [77, 77, 77, 77],
    "n": [52, 52, 52, 52],
    "o": [51, 51, 51, 51],
    "p": [52, 52, 52, 52],
    "q": [52, 52, 52, 52],
    "r": [36, 36, 36, 36],
    "s": [47, 47, 47, 47],
    "t": [30, 30, 30, 30],
    "u": [52, 52, 52, 52],
    "v": [44, 44, 44, 44],
    "w": [67, 67, 67, 67],
    "x": [43, 43, 43, 43],
    "y": [45, 45, 45, 45],
    "z": [35, 35, 35, 35],
    "{": [37, 37, 37, 37],
    "|": [27, 27, 27, 27],
    "}": [37, 37, 37, 37],
    "~": [52, 52, 52, 52]
  },
  "times new roman": {
    "0": [50, 50, 50, 50],
    "1": [50, 50, 50, 50],
    "2": [50, 50, 50, 50],
    "3": [50, 50, 50, 50],
    "4": [50, 50, 50, 50],
    "5": [50, 50, 50, 50],
    "6": [50, 50, 50, 50],
    "7": [50, 50, 50, 50],
    "8": [50, 50, 50, 50],
    "9": [50, 50, 50, 50],
    " ": [25, 25, 25, 25],
    "!": [33, 33, 33, 39],
    "\"": [41, 56, 42, 56],
    "#": [50, 50, 50, 50],
    "$": [50, 50, 50, 50],
    "%": [83, 100, 83, 83],
    "&": [78, 83, 78, 78],
    "'": [18, 28, 21, 28],
    "(": [33, 33, 33, 33],
    ")": [33, 33, 33, 33],
    "*": [50, 50, 50, 50],
    "+": [56, 57, 67, 57],
    ",": [25, 25, 25, 25],
    "-": [33, 33, 33, 33],
    ".": [25, 25, 25, 25],
    "/": [28, 28, 28, 28],
    ":": [28, 33, 33, 33],
    ";": [28, 33, 33, 33],
    "<": [56, 57, 67, 57],
    "=": [56, 57, 67, 57],
    ">": [56, 57, 67, 57],
    "?": [44, 50, 50, 50],
    "@": [92, 93, 92, 83],
    "A": [72, 72, 61, 67],
    "B": [67, 67, 61, 67],
    "C": [67, 72, 67, 67],
    "D": [72, 72, 72, 72],
    "E": [61, 67, 61, 67],
    "F": [56, 61, 61, 67],
    "G": [72, 78, 72, 72],
    "H": [72, 78, 72, 78],
    "I": [33, 39, 33, 39],
    "J": [39, 50, 44, 50],
    "K": [72, 78, 67, 67],
    "L": [61, 67, 56, 61],
    "M": [89, 94, 83, 89],
    "N": [72, 72, 67, 72],
    "O": [72, 78, 72, 72],
    "P": [56, 61, 61, 61],
    "Q": [72, 78, 72, 72],
    "R": [67, 72, 61, 67],
    "S": [56, 56, 50, 56],
    "T": [61, 67, 56, 61],
    "U": [72, 72, 72, 72],
    "V": [72, 72, 61, 67],
    "W": [94, 100, 83, 89],
    "X": [72, 72, 61, 67],
    "Y": [72, 72, 56, 61],
    "Z": [61, 67, 56, 61],
    "[": [33, 33, 39, 33],
    "\\": [28, 28, 28, 28],
    "]": [33, 33, 39, 33],
    "^": [47, 58, 42, 57],
    "_": [50, 50, 50, 50],
    "`": [33, 33, 33, 33],
    "a": [44, 50, 50, 50],
    "b": [50, 56, 50, 50],
    "c": [44, 44, 44, 44],
    "d": [50, 56, 50, 50],
    "e": [44, 44, 44, 44],
    "f": [33, 33, 28, 33],
    "g": [50, 50, 50, 50],
    "h": [50, 56, 50, 56],
    "i": [28, 28, 28, 28],
    "j": [28, 33, 28, 28],
    "k": [50, 56, 44, 50],
    "l": [28, 28, 28, 28],
    "m": [78, 83, 72, 78],
    "n": [50, 56, 50, 56],
    "o": [50, 50, 50, 50],
    "p": [50, 56, 50, 50],
    "q": [50, 56, 50, 50],
    "r": [33, 44, 39, 39],
    "s": [39, 39, 39, 39],
    "t": [28, 33, 28, 28],
    "u": [50, 56, 50, 56],
    "v": [50, 50, 44, 44],
    "w": [72, 72, 67, 67],
    "x": [50, 50, 44, 50],
    "y": [50, 50, 44, 44],
    "z": [44, 44, 39, 39],
    "{": [48, 39, 40, 35],
    "|": [20, 22, 27, 22],
    "}": [48, 39, 40, 35],
    "~": [54, 52, 54, 57]
  },
  "trebuchet ms": {
    "0": [52, 59, 52, 59],
    "1": [52, 59, 52, 59],
    "2": [52, 59, 52, 59],
    "3": [52, 59, 52, 59],
    "4": [52, 59, 52, 59],
    "5": [52, 59, 52, 59],
    "6": [52, 59, 52, 59],
    "7": [52, 59, 52, 59],
    "8": [52, 59, 52, 59],
    "9": [52, 59, 52, 59],
    " ": [30, 30, 30, 30],
    "!": [37, 37, 37, 37],
    "\"": [32, 37, 32, 39],
    "#": [52, 59, 52, 59],
    "$": [52, 59, 48, 59],
    "%": [60, 68, 60, 73],
    "&": [71, 71, 71, 71],
    "'": [16, 23, 16, 30],
    "(": [37, 37, 37, 37],
    ")": [37, 37, 37, 37],
    "*": [37, 43, 37, 43],
    "+": [52, 59, 52, 59],
    ",": [37, 37, 37, 37],
    "-": [37, 37, 37, 37],
    ".": [37, 37, 37, 37],
    "/": [52, 39, 52, 40],
    ":": [37, 37, 37, 37],
    ";": [37, 37, 37, 37],
    "<": [52, 59, 52, 59],
    "=": [52, 59, 52, 59],
    ">": [52, 59, 52, 59],
    "?": [37, 44, 37, 40],
    "@": [77, 77, 77, 77],
    "A": [59, 63, 61, 61],
    "B": [57, 60, 57, 59],
    "C": [60, 61, 60, 61],
    "D": [61, 64, 61, 63],
    "E": [54, 57, 54, 59],
    "F": [52, 58, 52, 59],
    "G": [68, 67, 68, 68],
    "H": [65, 68, 65, 68],
    "I": [28, 28, 28, 28],
    "J": [48, 53, 48, 50],
    "K": [58, 62, 58, 65],
    "L": [51, 55, 51, 53],
    "M": [71, 75, 76, 79],
    "N": [64, 67, 64, 66],
    "O": [67, 70, 67, 70],
    "P": [56, 59, 54, 58],
    "Q": [68, 71, 67, 77],
    "R": [58, 61, 58, 62],
    "S": [48, 51, 48, 50],
    "T": [58, 61, 58, 69],
    "U": [65, 68, 65, 66],
    "V": [59, 62, 59, 68],
    "W": [85, 88, 85, 93],
    "X": [56, 60, 56, 66],
    "Y": [57, 61, 57, 68],
    "Z": [55, 56, 55, 61],
    "[": [37, 40, 37, 49],
    "\\": [36, 36, 36, 48],
    "]": [37, 40, 37, 49],
    "^": [52, 59, 52, 59],
    "_": [52, 59, 52, 59],
    "`": [52, 59, 52, 59],
    "a": [53, 53, 53, 59],
    "b": [56, 58, 56, 59],
    "c": [50, 51, 46, 49],
    "d": [56, 58, 56, 59],
    "e": [55, 57, 54, 55],
    "f": [37, 37, 40, 41],
    "g": [50, 50, 50, 54],
    "h": [55, 59, 56, 56],
    "i": [29, 30, 31, 33],
    "j": [37, 37, 37, 39],
    "k": [50, 55, 50, 54],
    "l": [29, 29, 32, 32],
    "m": [83, 86, 83, 83],
    "n": [55, 59, 55, 56],
    "o": [54, 57, 54, 57],
    "p": [56, 58, 56, 60],
    "q": [56, 58, 56, 60],
    "r": [39, 43, 42, 45],
    "s": [40, 43, 40, 46],
    "t": [40, 40, 42, 44],
    "u": [55, 59, 56, 56],
    "v": [49, 53, 49, 55],
    "w": [74, 78, 74, 77],
    "x": [50, 55, 50, 58],
    "y": [49, 53, 49, 56],
    "z": [47, 53, 47, 53],
    "{": [37, 43, 37, 49],
    "|": [52, 59, 52, 59],
    "}": [37, 43, 37, 49],
    "~": [52, 59, 52, 59]
  },
  "verdana": {
    "0": [64, 71, 64, 71],
    "1": [64, 71, 64, 71],
    "2": [64, 71, 64, 71],
    "3": [64, 71, 64, 71],
    "4": [64, 71, 64, 71],
    "5": [64, 71, 64, 71],
    "6": [64, 71, 64, 71],
    "7": [64, 71, 64, 71],
    "8": [64, 71, 64, 71],
    "9": [64, 71, 64, 71],
    " ": [35, 34, 35, 34],
    "!": [39, 40, 39, 40],
    "\"": [46, 59, 46, 59],
    "#": [82, 87, 82, 87],
    "$": [64, 71, 64, 71],
    "%": [108, 127, 108, 127],
    "&": [73, 86, 73, 86],
    "'": [27, 33, 27, 33],
    "(": [45, 54, 45, 54],
    ")": [45, 54, 45, 54],
    "*": [64, 71, 64, 71],
    "+": [82, 87, 82, 87],
    ",": [36, 36, 36, 36],
    "-": [45, 48, 45, 48],
    ".": [36, 36, 36, 36],
    "/": [45, 69, 45, 69],
    ":": [45, 40, 45, 40],
    ";": [45, 40, 45, 40],
    "<": [82, 87, 82, 87],
    "=": [82, 87, 82, 87],
    ">": [82, 87, 82, 87],
    "?": [55, 62, 55, 62],
    "@": [100, 96, 100, 96],
    "A": [68, 78, 68, 78],
    "B": [69, 76, 69, 76],
    "C": [70, 72, 70, 72],
    "D": [77, 83, 77, 83],
    "E": [63, 68, 63, 68],
    "F": [57, 65, 57, 65],
    "G": [78, 81, 78, 81],
    "H": [75, 84, 75, 84],
    "I": [42, 55, 42, 55],
    "J": [45, 56, 45, 56],
    "K": [69, 77, 69, 77],
    "L": [56, 64, 56, 64],
    "M": [84, 95, 84, 95],
    "N": [75, 85, 75, 85],
    "O": [79, 85, 79, 85],
    "P": [60, 73, 60, 73],
    "Q": [79, 85, 79, 85],
    "R": [70, 78, 70, 78],
    "S": [68, 71, 68, 71],
    "T": [62, 68, 62, 68],
    "U": [73, 81, 73, 81],
    "V": [68, 76, 68, 76],
    "W": [99, 113, 99, 113],
    "X": [69, 76, 69, 76],
    "Y": [62, 74, 62, 74],
    "Z": [69, 69, 69, 69],
    "[": [45, 54, 45, 54],
    "\\": [45, 69, 45, 69],
    "]": [45, 54, 45, 54],
    "^": [82, 87, 82, 87],
    "_": [64, 71, 64, 71],
    "`": [64, 71, 64, 71],
    "a": [60, 67, 60, 67],
    "b": [62, 70, 62, 70],
    "c": [52, 59, 52, 59],
    "d": [62, 70, 62, 70],
    "e": [60, 66, 60, 66],
    "f": [35, 42, 35, 42],
    "g": [62, 70, 62, 70],
    "h": [63, 71, 63, 71],
    "i": [27, 34, 27, 34],
    "j": [34, 40, 34, 40],
    "k": [59, 67, 59, 67],
    "l": [27, 34, 27, 34],
    "m": [97, 106, 97, 106],
    "n": [63, 71, 63, 71],
    "o": [61, 69, 61, 69],
    "p": [62, 70, 62, 70],
    "q": [62, 70, 62, 70],
    "r": [43, 50, 43, 50],
    "s": [52, 59, 52, 59],
    "t": [39, 46, 39, 46],
    "u": [63, 71, 63, 71],
    "v": [59, 65, 59, 65],
    "w": [82, 98, 82, 98],
    "x": [59, 67, 59, 67],
    "y": [59, 65, 59, 65],
    "z": [53, 60, 53, 60],
    "{": [63, 71, 63, 71],
    "|": [45, 54, 45, 54],
    "}": [63, 71, 63, 71],
    "~": [82, 87, 82, 87]
  },
  "webdings": {
    "0": [100, 100, 100, 100],
    "1": [100, 100, 100, 100],
    "2": [100, 100, 100, 100],
    "3": [100, 100, 100, 100],
    "4": [100, 100, 100, 100],
    "5": [100, 100, 100, 100],
    "6": [100, 100, 100, 100],
    "7": [100, 100, 100, 100],
    "8": [100, 100, 100, 100],
    "9": [100, 100, 100, 100],
    " ": [100, 100, 100, 100],
    "!": [100, 100, 100, 100],
    "\"": [100, 100, 100, 100],
    "#": [100, 100, 100, 100],
    "$": [100, 100, 100, 100],
    "%": [99, 99, 99, 99],
    "&": [100, 100, 100, 100],
    "'": [100, 100, 100, 100],
    "(": [100, 100, 100, 100],
    ")": [100, 100, 100, 100],
    "*": [100, 100, 100, 100],
    "+": [100, 100, 100, 100],
    ",": [100, 100, 100, 100],
    "-": [100, 100, 100, 100],
    ".": [100, 100, 100, 100],
    "/": [100, 100, 100, 100],
    ":": [100, 100, 100, 100],
    ";": [100, 100, 100, 100],
    "<": [100, 100, 100, 100],
    "=": [100, 100, 100, 100],
    ">": [100, 100, 100, 100],
    "?": [100, 100, 100, 100],
    "@": [100, 100, 100, 100],
    "A": [100, 100, 100, 100],
    "B": [100, 100, 100, 100],
    "C": [100, 100, 100, 100],
    "D": [100, 100, 100, 100],
    "E": [100, 100, 100, 100],
    "F": [100, 100, 100, 100],
    "G": [100, 100, 100, 100],
    "H": [100, 100, 100, 100],
    "I": [100, 100, 100, 100],
    "J": [100, 100, 100, 100],
    "K": [100, 100, 100, 100],
    "L": [100, 100, 100, 100],
    "M": [100, 100, 100, 100],
    "N": [100, 100, 100, 100],
    "O": [100, 100, 100, 100],
    "P": [100, 100, 100, 100],
    "Q": [100, 100, 100, 100],
    "R": [100, 100, 100, 100],
    "S": [100, 100, 100, 100],
    "T": [100, 100, 100, 100],
    "U": [100, 100, 100, 100],
    "V": [100, 100, 100, 100],
    "W": [54, 54, 54, 54],
    "X": [54, 54, 54, 54],
    "Y": [100, 100, 100, 100],
    "Z": [100, 100, 100, 100],
    "[": [100, 100, 100, 100],
    "\\": [100, 100, 100, 100],
    "]": [100, 100, 100, 100],
    "^": [100, 100, 100, 100],
    "_": [100, 100, 100, 100],
    "`": [100, 100, 100, 100],
    "a": [100, 100, 100, 100],
    "b": [100, 100, 100, 100],
    "c": [100, 100, 100, 100],
    "d": [100, 100, 100, 100],
    "e": [100, 100, 100, 100],
    "f": [100, 100, 100, 100],
    "g": [100, 100, 100, 100],
    "h": [100, 100, 100, 100],
    "i": [100, 100, 100, 100],
    "j": [100, 100, 100, 100],
    "k": [100, 100, 100, 100],
    "l": [100, 100, 100, 100],
    "m": [56, 56, 56, 56],
    "n": [100, 100, 100, 100],
    "o": [100, 100, 100, 100],
    "p": [100, 100, 100, 100],
    "q": [100, 100, 100, 100],
    "r": [100, 100, 100, 100],
    "s": [100, 100, 100, 100],
    "t": [100, 100, 100, 100],
    "u": [100, 100, 100, 100],
    "v": [100, 100, 100, 100],
    "w": [100, 100, 100, 100],
    "x": [100, 100, 100, 100],
    "y": [100, 100, 100, 100],
    "z": [100, 100, 100, 100],
    "{": [100, 100, 100, 100],
    "|": [100, 100, 100, 100],
    "}": [100, 100, 100, 100],
    "~": [100, 100, 100, 100]
  },
  "open sans": {
    "0": [57, 57, 55, 55],
    "1": [57, 57, 55, 55],
    "2": [57, 57, 55, 55],
    "3": [57, 57, 55, 55],
    "4": [57, 57, 55, 55],
    "5": [57, 57, 55, 55],
    "6": [57, 57, 55, 55],
    "7": [57, 57, 55, 55],
    "8": [57, 57, 55, 55],
    "9": [57, 57, 55, 55],
    " ": [26, 26, 26, 26],
    "!": [27, 29, 26, 29],
    "\"": [40, 47, 39, 45],
    "#": [65, 65, 65, 65],
    "$": [57, 57, 55, 55],
    "%": [82, 90, 79, 86],
    "&": [73, 75, 67, 71],
    "'": [22, 27, 22, 25],
    "(": [30, 34, 29, 34],
    ")": [30, 34, 29, 34],
    "*": [55, 54, 55, 54],
    "+": [57, 57, 55, 55],
    ",": [25, 29, 24, 28],
    "-": [32, 32, 31, 32],
    ".": [27, 29, 25, 29],
    "/": [37, 41, 35, 42],
    ":": [27, 29, 25, 29],
    ";": [27, 29, 25, 29],
    "<": [57, 57, 55, 55],
    "=": [57, 57, 55, 55],
    ">": [57, 57, 55, 55],
    "?": [43, 48, 43, 46],
    "@": [90, 90, 85, 86],
    "A": [63, 69, 56, 63],
    "B": [65, 67, 60, 62],
    "C": [63, 64, 58, 61],
    "D": [73, 74, 67, 68],
    "E": [56, 56, 51, 54],
    "F": [52, 55, 47, 53],
    "G": [73, 72, 68, 69],
    "H": [74, 77, 68, 70],
    "I": [28, 33, 27, 32],
    "J": [27, 33, 27, 33],
    "K": [61, 66, 56, 61],
    "L": [52, 56, 47, 52],
    "M": [90, 94, 84, 88],
    "N": [75, 81, 70, 75],
    "O": [78, 80, 72, 73],
    "P": [60, 63, 57, 58],
    "Q": [78, 80, 72, 73],
    "R": [62, 66, 57, 61],
    "S": [55, 55, 50, 53],
    "T": [55, 58, 50, 53],
    "U": [73, 76, 68, 69],
    "V": [60, 65, 55, 59],
    "W": [93, 97, 85, 89],
    "X": [58, 67, 52, 61],
    "Y": [56, 62, 50, 56],
    "Z": [57, 58, 53, 54],
    "[": [33, 33, 29, 33],
    "\\": [37, 41, 35, 42],
    "]": [33, 33, 29, 33],
    "^": [54, 53, 52, 53],
    "_": [45, 41, 39, 40],
    "`": [58, 61, 55, 55],
    "a": [56, 60, 56, 59],
    "b": [61, 63, 58, 60],
    "c": [48, 51, 45, 48],
    "d": [61, 63, 58, 59],
    "e": [56, 59, 49, 56],
    "f": [34, 39, 31, 37],
    "g": [55, 56, 50, 54],
    "h": [61, 66, 58, 60],
    "i": [25, 31, 25, 30],
    "j": [25, 31, 25, 30],
    "k": [52, 62, 49, 57],
    "l": [25, 31, 25, 30],
    "m": [93, 98, 87, 90],
    "n": [61, 66, 58, 60],
    "o": [60, 62, 56, 58],
    "p": [61, 63, 58, 60],
    "q": [61, 63, 58, 59],
    "r": [41, 45, 40, 42],
    "s": [48, 50, 43, 47],
    "t": [35, 43, 32, 41],
    "u": [61, 66, 58, 60],
    "v": [50, 57, 46, 51],
    "w": [78, 86, 72, 79],
    "x": [52, 58, 48, 53],
    "y": [50, 57, 46, 52],
    "z": [47, 49, 44, 46],
    "{": [38, 39, 35, 35],
    "|": [55, 55, 55, 55],
    "}": [38, 39, 35, 35],
    "~": [57, 57, 55, 55]
  },
  "tahoma": {
    "0": [55, 64, 55, 64],
    "1": [55, 64, 55, 64],
    "2": [55, 64, 55, 64],
    "3": [55, 64, 55, 64],
    "4": [55, 64, 55, 64],
    "5": [55, 64, 55, 64],
    "6": [55, 64, 55, 64],
    "7": [55, 64, 55, 64],
    "8": [55, 64, 55, 64],
    "9": [55, 64, 55, 64],
    " ": [31, 29, 31, 29],
    "!": [33, 34, 33, 34],
    "\"": [40, 49, 40, 49],
    "#": [73, 82, 73, 82],
    "$": [55, 64, 55, 64],
    "%": [98, 120, 98, 120],
    "&": [67, 78, 67, 78],
    "'": [21, 28, 21, 28],
    "(": [38, 45, 38, 45],
    ")": [38, 45, 38, 45],
    "*": [55, 64, 55, 64],
    "+": [73, 82, 73, 82],
    ",": [30, 31, 30, 31],
    "-": [36, 43, 36, 43],
    ".": [30, 31, 30, 31],
    "/": [38, 58, 38, 58],
    ":": [35, 36, 35, 36],
    ";": [35, 36, 35, 36],
    "<": [73, 82, 73, 82],
    "=": [73, 82, 73, 82],
    ">": [73, 82, 73, 82],
    "?": [47, 57, 47, 57],
    "@": [91, 92, 91, 92],
    "A": [60, 68, 60, 68],
    "B": [59, 69, 59, 69],
    "C": [60, 67, 60, 67],
    "D": [68, 76, 68, 76],
    "E": [56, 62, 56, 62],
    "F": [52, 58, 52, 58],
    "G": [67, 75, 67, 75],
    "H": [68, 76, 68, 76],
    "I": [37, 48, 37, 48],
    "J": [42, 50, 42, 50],
    "K": [59, 70, 59, 70],
    "L": [50, 57, 50, 57],
    "M": [77, 89, 77, 89],
    "N": [67, 77, 67, 77],
    "O": [71, 77, 71, 77],
    "P": [55, 66, 55, 66],
    "Q": [71, 77, 71, 77],
    "R": [62, 73, 62, 73],
    "S": [56, 63, 56, 63],
    "T": [58, 61, 58, 61],
    "U": [66, 74, 66, 74],
    "V": [60, 67, 60, 67],
    "W": [90, 103, 90, 103],
    "X": [58, 68, 58, 68],
    "Y": [58, 67, 58, 67],
    "Z": [56, 62, 56, 62],
    "[": [38, 45, 38, 45],
    "\\": [38, 58, 38, 58],
    "]": [38, 45, 38, 45],
    "^": [73, 82, 73, 82],
    "_": [55, 64, 55, 64],
    "`": [55, 55, 55, 55],
    "a": [52, 60, 52, 60],
    "b": [55, 63, 55, 63],
    "c": [46, 53, 46, 53],
    "d": [55, 63, 55, 63],
    "e": [53, 59, 53, 59],
    "f": [32, 38, 32, 38],
    "g": [55, 63, 55, 63],
    "h": [56, 64, 56, 64],
    "i": [23, 30, 23, 30],
    "j": [28, 36, 28, 36],
    "k": [50, 60, 50, 60],
    "l": [23, 30, 23, 30],
    "m": [84, 95, 84, 95],
    "n": [56, 64, 56, 64],
    "o": [54, 62, 54, 62],
    "p": [55, 63, 55, 63],
    "q": [55, 63, 55, 63],
    "r": [36, 43, 36, 43],
    "s": [45, 51, 45, 51],
    "t": [33, 42, 33, 42],
    "u": [56, 64, 56, 64],
    "v": [50, 58, 50, 58],
    "w": [74, 89, 74, 89],
    "x": [50, 60, 50, 60],
    "y": [50, 58, 50, 58],
    "z": [44, 53, 44, 53],
    "{": [48, 62, 48, 62],
    "|": [38, 64, 38, 64],
    "}": [48, 62, 48, 62],
    "~": [73, 82, 73, 82]
  },
  "quantify": {
    "0": [57, 57, 57, 57],
    "1": [40, 40, 40, 40],
    "2": [54, 54, 54, 54],
    "3": [54, 54, 54, 54],
    "4": [61, 61, 61, 61],
    "5": [54, 54, 54, 54],
    "6": [53, 53, 53, 53],
    "7": [52, 52, 52, 52],
    "8": [53, 53, 53, 53],
    "9": [53, 53, 53, 53],
    " ": [20, 20, 20, 20],
    "!": [24, 24, 24, 24],
    "\"": [46, 46, 46, 46],
    "#": [77, 77, 77, 77],
    "$": [60, 60, 60, 60],
    "%": [102, 102, 102, 102],
    "&": [68, 68, 68, 68],
    "'": [24, 24, 24, 24],
    "(": [33, 33, 33, 33],
    ")": [33, 33, 33, 33],
    "*": [30, 30, 30, 30],
    "+": [58, 58, 58, 58],
    ",": [24, 24, 24, 24],
    "-": [51, 51, 51, 51],
    ".": [24, 24, 24, 24],
    "/": [69, 69, 69, 69],
    ":": [24, 24, 24, 24],
    ";": [24, 24, 24, 24],
    "<": [46, 46, 46, 46],
    "=": [61, 61, 61, 61],
    ">": [46, 46, 46, 46],
    "?": [54, 54, 54, 54],
    "@": [83, 83, 83, 83],
    "A": [78, 78, 78, 78],
    "B": [63, 63, 63, 63],
    "C": [65, 65, 65, 65],
    "D": [70, 70, 70, 70],
    "E": [54, 54, 54, 54],
    "F": [52, 52, 52, 52],
    "G": [78, 78, 78, 78],
    "H": [60, 60, 60, 60],
    "I": [20, 20, 20, 20],
    "J": [54, 54, 54, 54],
    "K": [60, 60, 60, 60],
    "L": [45, 45, 45, 45],
    "M": [77, 77, 77, 77],
    "N": [60, 60, 60, 60],
    "O": [78, 78, 78, 78],
    "P": [57, 57, 57, 57],
    "Q": [80, 80, 80, 80],
    "R": [58, 58, 58, 58],
    "S": [55, 55, 55, 55],
    "T": [57, 57, 57, 57],
    "U": [65, 65, 65, 65],
    "V": [69, 69, 69, 69],
    "W": [99, 99, 99, 99],
    "X": [70, 70, 70, 70],
    "Y": [70, 70, 70, 70],
    "Z": [57, 57, 57, 57],
    "[": [32, 32, 32, 32],
    "\\": [68, 68, 68, 68],
    "]": [32, 32, 32, 32],
    "^": [56, 56, 56, 56],
    "_": [72, 72, 72, 72],
    "`": [32, 32, 32, 32],
    "a": [58, 58, 58, 58],
    "b": [58, 58, 58, 58],
    "c": [47, 47, 47, 47],
    "d": [58, 58, 58, 58],
    "e": [57, 57, 57, 57],
    "f": [28, 28, 28, 28],
    "g": [57, 57, 57, 57],
    "h": [53, 53, 53, 53],
    "i": [19, 19, 19, 19],
    "j": [19, 19, 19, 19],
    "k": [50, 50, 50, 50],
    "l": [19, 19, 19, 19],
    "m": [76, 76, 76, 76],
    "n": [53, 53, 53, 53],
    "o": [57, 57, 57, 57],
    "p": [58, 58, 58, 58],
    "q": [58, 58, 58, 58],
    "r": [32, 32, 32, 32],
    "s": [43, 43, 43, 43],
    "t": [30, 30, 30, 30],
    "u": [53, 53, 53, 53],
    "v": [61, 61, 61, 61],
    "w": [81, 81, 81, 81],
    "x": [59, 59, 59, 59],
    "y": [61, 61, 61, 61],
    "z": [46, 46, 46, 46],
    "{": [29, 29, 29, 29],
    "|": [22, 22, 22, 22],
    "}": [29, 29, 29, 29],
    "~": [62, 62, 62, 62]
  }
};

exports.default = widthsMap;
module.exports = exports["default"];
});

var lib = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



var _lodash2 = _interopRequireDefault(lodash_deburr);



var _widthsMap2 = _interopRequireDefault(widthsMap_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var settingsDefaults = { font: 'Arial', size: 100 };

var getWidth = function getWidth(string, settings) {
  var sett = _extends({}, settingsDefaults, settings);
  var font = sett.font.toLowerCase();
  var size = sett.size;
  var variant = 0 + (sett.bold ? 1 : 0) + (sett.italic ? 2 : 0);
  var map = sett.map || _widthsMap2.default;
  var available = Object.keys(map);
  if (available.indexOf(font) === -1) {
    throw new Error('This font is not supported. Supported fonts are: ' + available.join(', '));
  }
  var totalWidth = 0;
  (0, _lodash2.default)(string).split('').forEach(function (char) {
    if (/[\x00-\x1F]/.test(char)) {
      // non-printable character
      return true;
    }
    // use width of 'x' as fallback for unregistered char
    var widths = map[font][char] || map[font].x;
    var width = widths[variant];
    totalWidth += width;
    return true;
  });
  return totalWidth * (size / 100);
};

exports.default = getWidth;
module.exports = exports['default'];
});

var pixelWidth = /*@__PURE__*/getDefaultExportFromCjs(lib);

var getYoastInsightsForContent = function getYoastInsightsForContent(YoastSEO, html, options) {
  var paper = new YoastSEO.Paper(html, Object.assign({
    keyword: options.keyword,
    url: options.url,
    permalink: options.permalink,
    title: options.title
  }, options.title && {
    titleWidth: pixelWidth(options.title, {
      font: "arial",
      size: 20
    })
  }, {
    synonyms: options.synonyms.join(","),
    description: options.description,
    locale: options.langCulture.replace("-", "_")
  }));
  var researcher = new YoastSEO.Researcher(paper);
  return {
    keyphraseLength: researcher.getResearch("keyphraseLength"),
    metaDescriptionKeyword: researcher.getResearch("metaDescriptionKeyword"),
    getLinkStatistics: researcher.getResearch("getLinkStatistics"),
    firstParagraph: researcher.getResearch("firstParagraph"),
    keywordDensity: researcher.getResearch("getKeywordDensity"),
    wordCountInText: researcher.getResearch("wordCountInText"),
    keywordCount: researcher.getResearch("keywordCount"),
    keywordInPageTitle: researcher.getResearch("findKeywordInPageTitle"),
    altTagCount: researcher.getResearch("altTagCount"),
    pageTitleWidth: researcher.getResearch("pageTitleWidth"),
    keywordCountInUrl: researcher.getResearch("keywordCountInUrl"),
    countSentencesFromText: researcher.getResearch("countSentencesFromText"),
    passiveVoice: researcher.getResearch("passiveVoice"),
    sentenceBeginnings: researcher.getResearch("getSentenceBeginnings"),
    sentences: researcher.getResearch("sentences"),
    fleschReading: researcher.getResearch("calculateFleschReading"),
    paragraphLength: researcher.getResearch("getParagraphLength"),
    transitionWords: researcher.getResearch("findTransitionWords")
  };
};

var SEOInputReadabilityTab = function SEOInputReadabilityTab(_ref) {
  var hidden = _ref.hidden,
      insights = _ref.insights;
      _ref.value;
  var passiveVoicePercentage = React__default['default'].useMemo(function () {
    if (insights != null && insights.passiveVoice && insights.countSentencesFromText.length) return Math.round(insights.passiveVoice.passives.length / insights.countSentencesFromText.length * 100);
    return 0;
  }, [insights]);
  var consecutiveSentencesCount = React__default['default'].useMemo(function () {
    if (insights != null && insights.sentenceBeginnings) return insights.sentenceBeginnings.filter(function (b) {
      return b.count >= 3;
    }).length;
    return 0;
  }, [insights]);
  var longSentencePercentage = React__default['default'].useMemo(function () {
    if (insights != null && insights.sentences.length) {
      var longSentences = insights.sentences.filter(function (s) {
        return s.replace(/[,.;]/g, '').split(' ').filter(function (s) {
          return s.trim().length > 0;
        }).length > 20;
      });
      return Math.round(longSentences.length / insights.sentences.length * 100);
    }

    return 0;
  }, [insights]);
  var longParagraphsCount = React__default['default'].useMemo(function () {
    if (insights != null && insights.paragraphLength) return insights.paragraphLength.filter(function (p) {
      return p.wordCount > 150;
    }).length;
    return 0;
  }, [insights]);
  var veryLongParagraphsCount = React__default['default'].useMemo(function () {
    if (insights != null && insights.paragraphLength) return insights.paragraphLength.filter(function (p) {
      return p.wordCount > 300;
    }).length;
    return 0;
  }, [insights]);
  var transitionWordsSentencePercentage = React__default['default'].useMemo(function () {
    if (insights != null && insights.transitionWords && insights.transitionWords.totalSentences) {
      return Math.round(insights.transitionWords.transitionWordSentences / insights.transitionWords.totalSentences * 100);
    }

    return 0;
  }, [insights]);
  return /*#__PURE__*/React__default['default'].createElement(ui.TabPanel, {
    hidden: hidden,
    id: Tabs.READABILITY,
    "aria-labelledby": Tabs.READABILITY
  }, !!insights && /*#__PURE__*/React__default['default'].createElement(ui.Stack, {
    space: 2,
    marginTop: 2
  }, /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: passiveVoicePercentage <= 10,
    warning: passiveVoicePercentage > 10 && passiveVoicePercentage < 15
  }, function (valid) {
    return valid ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "No excessive use of passive voice detected") : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, passiveVoicePercentage, "% of the sentences contain passive voice, which is more than the recommended maximum of 10%");
  }), /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: consecutiveSentencesCount === 0
  }, function (valid) {
    return valid ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "No problematic consecutive sentences found") : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "The text contains ", consecutiveSentencesCount, " instances where 3 or more consecutive sentences start with the same word. ");
  }), /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: longSentencePercentage === 0
  }, function (valid) {
    return valid ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "No problems with sentence length detected") : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, longSentencePercentage, "% of the sentences contain more than 20 words, which is more than the recommended maximum of 25%");
  }), /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: longParagraphsCount === 0
  }, function (valid) {
    return valid ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "None of the paragraphs are too long. Great job!") : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, longParagraphsCount, " of the paragraphs contain more than the recommended maximum of 150 words.");
  }), /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: veryLongParagraphsCount === 0
  }, function (valid) {
    return valid ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "Good subheading distribution") : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, veryLongParagraphsCount, " section of your text is longer than 300 words and is not separated by any subheadings.");
  }), /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    valid: transitionWordsSentencePercentage >= 30
  }, function (valid) {
    return valid ? /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "Good use of transition words") : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, "Only ", transitionWordsSentencePercentage, "% of your sentences use transition words, this is less than the advised 30%");
  }), insights.fleschReading < 60 && /*#__PURE__*/React__default['default'].createElement(InsightResult, {
    warning: true
  }, "The copy scores ", insights.fleschReading, " in the flesch reading test, which is considered fairly difficult to read.")));
};

var SEOInputComponent = function SEOInputComponent(_ref) {
  var type = _ref.type,
      value = _ref.value,
      document = _ref.document;
  var YoastSEO = React__default['default'].useRef(require('yoastseo'));

  var _React$useState = React__default['default'].useState(true),
      initialAudit = _React$useState[0],
      setInitialAudit = _React$useState[1];

  var _React$useState2 = React__default['default'].useState(false),
      auditOngoing = _React$useState2[0],
      setAuditOngoing = _React$useState2[1];

  var _React$useState3 = React__default['default'].useState(Tabs.SEO),
      selectedTab = _React$useState3[0],
      setSelectedTab = _React$useState3[1];

  var _React$useState4 = React__default['default'].useState(null),
      yoastInsights = _React$useState4[0],
      setYoastInsights = _React$useState4[1];

  var performYoastCheck = useDebouncedCallback( /*#__PURE__*/_asyncToGenerator__default['default']( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function _callee() {
    var options, _yield$getRawContent, slug, url, title, description, langCulture, rawContent, insights;

    return _regeneratorRuntime__default['default'].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            setAuditOngoing(true);
            _context.prev = 1;
            options = type.options;
            _context.next = 5;
            return getRawContent(document, {
              baseUrl: options.baseUrl,
              fetchRemote: options.fetchRemote,
              contentSelector: options.contentSelector,
              slug: options.slug,
              content: options.content,
              title: options.title,
              description: options.description,
              locale: options.locale
            });

          case 5:
            _yield$getRawContent = _context.sent;
            slug = _yield$getRawContent.slug;
            url = _yield$getRawContent.url;
            title = _yield$getRawContent.title;
            description = _yield$getRawContent.description;
            langCulture = _yield$getRawContent.langCulture;
            rawContent = _yield$getRawContent.rawContent;
            insights = getYoastInsightsForContent(YoastSEO.current, rawContent, {
              keyword: (value == null ? void 0 : value.focus_keyword) || '',
              synonyms: (value == null ? void 0 : value.focus_synonyms) || [],
              title: title,
              description: description,
              langCulture: langCulture,
              url: slug,
              permalink: url
            });
            setYoastInsights(insights);
            _context.next = 19;
            break;

          case 16:
            _context.prev = 16;
            _context.t0 = _context["catch"](1);
            console.error(_context.t0);

          case 19:
            _context.prev = 19;
            setInitialAudit(false);
            setAuditOngoing(false);
            return _context.finish(19);

          case 23:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[1, 16, 19, 23]]);
  })), 2000);
  React__default['default'].useEffect(function () {
    performYoastCheck();
  }, [value, document]);
  return /*#__PURE__*/React__default['default'].createElement(ui.Container, null, /*#__PURE__*/React__default['default'].createElement(ui.Card, {
    style: {
      position: 'relative'
    },
    padding: 4,
    shadow: 2
  }, /*#__PURE__*/React__default['default'].createElement(ui.Stack, {
    space: 4
  }, /*#__PURE__*/React__default['default'].createElement(ui.Heading, {
    as: "h3",
    size: 1
  }, "SEO Tools"), /*#__PURE__*/React__default['default'].createElement(ui.Container, null, initialAudit ? /*#__PURE__*/React__default['default'].createElement(BoxSpinner, null) : /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, auditOngoing && /*#__PURE__*/React__default['default'].createElement(BoxSpinner, {
    overlay: true
  }), /*#__PURE__*/React__default['default'].createElement(ui.TabList, {
    space: 1
  }, /*#__PURE__*/React__default['default'].createElement(ui.Tab, {
    id: Tabs.SEO,
    "aria-controls": Tabs.SEO,
    label: "SEO",
    selected: selectedTab === Tabs.SEO,
    onClick: function onClick() {
      return setSelectedTab(Tabs.SEO);
    }
  }), /*#__PURE__*/React__default['default'].createElement(ui.Tab, {
    id: Tabs.READABILITY,
    "aria-controls": Tabs.READABILITY,
    label: "Readability",
    selected: selectedTab === Tabs.READABILITY,
    onClick: function onClick() {
      return setSelectedTab(Tabs.READABILITY);
    }
  })), /*#__PURE__*/React__default['default'].createElement(SEOInputSeoTab, {
    value: value,
    hidden: selectedTab !== Tabs.SEO,
    insights: yoastInsights != null ? yoastInsights : undefined
  }), /*#__PURE__*/React__default['default'].createElement(SEOInputReadabilityTab, {
    value: value,
    hidden: selectedTab !== Tabs.READABILITY,
    insights: yoastInsights != null ? yoastInsights : undefined
  }))))));
};

var SEOInput = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose__default['default'](SEOInput, _React$Component);

  function SEOInput() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    _defineProperty__default['default'](_assertThisInitialized__default['default'](_this), "handleFieldChange", function (field, fieldPatchEvent) {
      var _this$props = _this.props,
          type = _this$props.type,
          onChange = _this$props.onChange;
      onChange(fieldPatchEvent.prefixAll(field.name).prepend(patchEvent.setIfMissing({
        _type: type.name
      })));
    });

    return _this;
  }

  var _proto = SEOInput.prototype;

  _proto.focus = function focus() {// @README irrelevant
  };

  _proto.render = function render() {
    var _this2 = this;

    var _this$props2 = this.props,
        type = _this$props2.type,
        value = _this$props2.value,
        onFocus = _this$props2.onFocus,
        onBlur = _this$props2.onBlur;
        _this$props2.onChange;
    var fields = type.fields;
    return /*#__PURE__*/React__default['default'].createElement(ui.ThemeProvider, {
      theme: ui.studioTheme
    }, /*#__PURE__*/React__default['default'].createElement(ui.Stack, {
      space: 4
    }, /*#__PURE__*/React__default['default'].createElement(SEOInputComponent, this.props), /*#__PURE__*/React__default['default'].createElement(ui.Container, null, /*#__PURE__*/React__default['default'].createElement(ui.Card, {
      style: {
        position: 'relative'
      },
      padding: 4,
      shadow: 2
    }, /*#__PURE__*/React__default['default'].createElement(ui.Stack, {
      space: 3
    }, fields.map(function (field) {
      return /*#__PURE__*/React__default['default'].createElement("div", {
        key: field.name
      }, /*#__PURE__*/React__default['default'].createElement(formBuilder.FormBuilderInput, {
        key: field.name,
        type: field.type,
        level: type.level,
        path: [field.name],
        value: value ? value[field.name] : undefined,
        onChange: function onChange(patchEvent) {
          return _this2.handleFieldChange(field, patchEvent);
        },
        onBlur: onBlur,
        onFocus: onFocus
      }));
    }))))));
  };

  return SEOInput;
}(React__default['default'].Component);

var Input = formBuilder.withDocument(SEOInput);

module.exports = Input;
//# sourceMappingURL=index.js.map
